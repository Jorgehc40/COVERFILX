{"ast":null,"code":"var _jsxFileName = \"/Users/djjorgehc/Documents/GitHub/REACT/COVERFILX/COVERFLIX/src/components/footer/card/Card.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getDetail } from \"../../../api/api\";\nimport { getMovieInfo } from \"../../../redux/coverflixSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\"; // Use 'Link' com 'L' maiúsculo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = ({\n  movie\n}) => {\n  _s();\n  const [movieDetail, setMovieDetail] = useState(); // Correção: use 'movieDetail' em vez de 'movieDetails'\n  const dispatch = useDispatch();\n  const onHoverDetails = e => {\n    getDetail(e.target.id, setMovieDetail);\n  };\n  useEffect(() => {\n    dispatch(getMovieInfo(movieDetail));\n  }, [movieDetail, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: \"/detail\",\n    id: movie.id,\n    onMouseEnter: onHoverDetails,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n      id: movie.id,\n      alt: `Imagem do poster do filme ${movie.title}`,\n      onMouseEnter: e => onHoverDetails(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"T\\xEDtulo: \", movie.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Nota: \", movie.vote_average]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"wKW0dReDYe4syHvkGUQj2A5xq6c=\", false, function () {\n  return [useDispatch];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useEffect","useState","getDetail","getMovieInfo","useDispatch","Link","jsxDEV","_jsxDEV","Card","movie","_s","movieDetail","setMovieDetail","dispatch","onHoverDetails","e","target","id","to","onMouseEnter","children","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","className","vote_average","_c","$RefreshReg$"],"sources":["/Users/djjorgehc/Documents/GitHub/REACT/COVERFILX/COVERFLIX/src/components/footer/card/Card.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getDetail } from \"../../../api/api\";\nimport { getMovieInfo } from \"../../../redux/coverflixSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\"; // Use 'Link' com 'L' maiúsculo\n\nexport const Card = ({ movie }) => {\n  const [movieDetail, setMovieDetail] = useState(); // Correção: use 'movieDetail' em vez de 'movieDetails'\n  const dispatch = useDispatch();\n\n  const onHoverDetails = (e) => {\n    getDetail(e.target.id, setMovieDetail); \n  };\n\n  useEffect(() => {\n    dispatch(getMovieInfo(movieDetail));\n  }, [movieDetail, dispatch]);\n\n  return (\n    <Link to={\"/detail\"} id={movie.id} onMouseEnter={onHoverDetails}>\n      <img\n        src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`} \n        id={movie.id}\n        alt={`Imagem do poster do filme ${movie.title}`}\n        onMouseEnter={(e) => onHoverDetails(e)}\n      />\n      <div className=\"infoContainer\">\n        <h4>Título: {movie.title}</h4>\n        <h4>Nota: {movie.vote_average}</h4>\n      </div>\n    </Link>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,YAAY,QAAQ,+BAA+B;AAC5D,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,OAAO,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,cAAc,GAAIC,CAAC,IAAK;IAC5Bb,SAAS,CAACa,CAAC,CAACC,MAAM,CAACC,EAAE,EAAEL,cAAc,CAAC;EACxC,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACda,QAAQ,CAACV,YAAY,CAACQ,WAAW,CAAC,CAAC;EACrC,CAAC,EAAE,CAACA,WAAW,EAAEE,QAAQ,CAAC,CAAC;EAE3B,oBACEN,OAAA,CAACF,IAAI;IAACa,EAAE,EAAE,SAAU;IAACD,EAAE,EAAER,KAAK,CAACQ,EAAG;IAACE,YAAY,EAAEL,cAAe;IAAAM,QAAA,gBAC9Db,OAAA;MACEc,GAAG,EAAG,kCAAiCZ,KAAK,CAACa,WAAY,EAAE;MAC3DL,EAAE,EAAER,KAAK,CAACQ,EAAG;MACbM,GAAG,EAAG,6BAA4Bd,KAAK,CAACe,KAAM,EAAE;MAChDL,YAAY,EAAGJ,CAAC,IAAKD,cAAc,CAACC,CAAC;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACFrB,OAAA;MAAKsB,SAAS,EAAC,eAAe;MAAAT,QAAA,gBAC5Bb,OAAA;QAAAa,QAAA,GAAI,aAAQ,EAACX,KAAK,CAACe,KAAK;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9BrB,OAAA;QAAAa,QAAA,GAAI,QAAM,EAACX,KAAK,CAACqB,YAAY;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAClB,EAAA,CA1BWF,IAAI;EAAA,QAEEJ,WAAW;AAAA;AAAA2B,EAAA,GAFjBvB,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}